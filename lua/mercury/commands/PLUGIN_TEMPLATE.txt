
MCMD = {}
MCMD.Command = "ungold" // The actual command index.
MCMD.Verb = "ungoldified" // The verb (if using)
MCMD.RconUse = true // Can RCON use this command?
MCMD.Useage = "<player>" // The useage for this command, the arguments.
MCMD.UseImmunity = true // Should this abide by immunity?
MCMD.PlayerTarget = true // Does it use a player target?
MCMD.HasMenu = false // Does it have a callable GenerateMenu function?
/// NOTICE /// if PlayerTarget is true, the first argument will be the selected player target.


function callfunc(caller,args)
    // Caller is the player who issued the command.
    // args is the string or player arguments that may have been passed.
	

    return true,"",false,{} //RETURN CODES.
    // First argument true / false -- Command succeeded? 
    // Second argument: String error, if first argument is false this is pushed to the client.
    // Third argument true / false -- supress default messages
    // Fourth argument table, the message to print to chat if second argument is true.

end


function MCMD.GenerateMenu(frame)
	// Frame is the container passed from the menu generation system
	net.Start("Mercury:Commands") // You can send commands over net
		net.WriteString("COMMAND NAME") // Just write a string containing the command string.
		net.WriteTable({ COMMAND ARGUMENTS })	// Along with the arguments in order in this table.
	net.SendToServer() // Finally send it to the server.
end

Mercury.Commands.AddCommand(MCMD.Command,MCMD,callfunc)// This is where we add the plugin.

// The syntax is AddCommand( command index, command table, command function )
